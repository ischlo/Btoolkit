% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hello.R
\name{as_geo}
\alias{as_geo}
\title{as_geo}
\usage{
as_geo(dt, colname = "geometry", crs = 4326, ...)
}
\arguments{
\item{dt}{usually a data.table, but a data.frame works to.}

\item{colname}{the column name or column number. If providing only a single column with the values to turn into geometries, just leave as is.}

\item{crs}{the crs to convert into}

\item{...}{Other otional argunats to pass to sf::st_as_sf}
}
\value{
a sf data.frame with the same number of columns as the input and with the specified column used a geometry.
}
\description{
This function bridges the packages sf and data.table to build easier workflows using both.
It is meant to turn a data.table into a sf data.frame using a column that stores wkt in the data.table.
It is also designed to work whithin the j part of a data.table workflow
, taking a character vector of wkt and turning it into a sf geometry column.
One especially relevant use case is when a data table has multiple columns that can potentially be used as geometries,
for example you might have polygons representing shapes, but also their centroids all in one table.
}
\examples{
y <- rnorm(100,mean = 51,sd=1)
x <- rnorm(100)
p <- paste0('POINT ( ',x,' ',y,')')
dt <- data.table::data.table(id = seq_along(p),geom=p)
dt |> as_geo('geom')
dt[,'geom'] |> as_geo()
dt[,as_geo(geom)]
}
